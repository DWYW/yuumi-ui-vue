@import "../../../styles/mixin.scss";

.yuumi-tabs {
  .tabs__header {
    overflow: hidden;
    display: flex;
    align-items: center;

    .navs__prev, .navs__next {
      padding-top: 0;
      padding-bottom: 0;
      @include Space("padding-right", "xxm");
      @include Space("padding-left", "xxm");
      flex: 0 0 auto;
      cursor: pointer;

      &:active {
        @include ColorWithKey("primary");
      }
    }
  }

  .navs {
    flex: 1 1 1px;
    overflow: hidden;

    .navs__body {
      float: left;
      transition: transform 0.3s;
      min-width: 100%;
      white-space: nowrap;

      .nav-item {
        @include Space("padding", "xm");
        cursor: pointer;
        transition: all 0.3s;

        &.__active {
          @include ColorWithKey("primary");
        }
      }
    }

    .navs__line {
      @include BackgroundColorWithKey("border");
      border-radius: 2px;
      overflow: hidden;

      .line-rect {
        transition: transform 0.3s, width 0.3s;
        @include BackgroundColorWithKey("primary");
      }
    }
  }

  .tabs__panel {
    padding-top: 0;
    padding-bottom: 0;
    @include Space("padding-left", "xm");
    @include Space("padding-right", "xm");
    position: relative;
  }

  @each $key in ("top", "right", "bottom", "left") {
    @if $key == "left" or $key == "right" {
      &.position__#{$key} {
        height: 100%;

        .tabs__header {
          flex-direction: column;
          height: 100%;

          @if $key == "left" {
            float: left;
          } @else {
            float: right;
          }

          .navs__prev, .navs__next {
            @include Space("padding", "xm");
          }
        }

        .navs {
          .navs__line {
            height: 100%;
            width: 2px;
            position: absolute;
            top: 0;
            @if $key == "left" {
              right: 0;
            } @else {
              left: 0;
            }

            .line-rect {
              width: 100%;
              height: 0;
            }
          }
        }

        .tabs__panel {
          overflow: hidden;
          @include Space("padding", "xm");
        }

        &.__card {
          .navs .navs__body {
            box-sizing: border-box;
            @if $key == "left" {
              @include Border($attr: "border-right");
            } @else {
              @include Border($attr: "border-left");
            }

            .nav-item {
              position: relative;
              @include Border();
              box-sizing: border-box;
              @include BackgroundColorWithKey("light");

              @if $key == "left" {
                @include BorderRadiusPartail($attr: "top-left");
                @include BorderRadiusPartail($attr: "bottom-left");
                margin-right: -1px;
              } @else {
                @include BorderRadiusPartail($attr: "top-right");
                @include BorderRadiusPartail($attr: "bottom-right");
                margin-left: -1px;
              }


              &:not(:last-child) {
                @include Space("margin-bottom", "xxm");
              }

              &.__active {
                @if $key == "left" {
                  @include BorderColorPartail($attr: "right", $key: "white");
                } @else {
                  @include BorderColorPartail($attr: "left", $key: "white");
                }
                @include BackgroundColorWithKey("white");
              }
            }
          }
        }
      }
    } @else {
      &.position__#{$key} {
        .tabs__header {
          flex-direction: row;

          @if $key == "top" {
            @include Space("margin-bottom", "sm");
          } @else {
            @include Space("margin-top", "sm");
          }
        }

        .navs  {
          .nav-item {
            display: inline-block;
          }

          .navs__line {
            width: 100%;
            height: 2px;

            .line-rect {
              width: 0;
              height: 100%;
            }
          }
        }

        &.__card {
          .navs .navs__body {
            box-sizing: border-box;
            @if $key == "top" {
              @include Border($attr: "border-bottom");
            } @else {
              @include Border($attr: "border-top");
            }

            .nav-item {
              position: relative;
              @include Border();
              box-sizing: border-box;
              @include BackgroundColorWithKey("light");

              @if $key == "top" {
                @include BorderRadiusPartail($attr: "top-left");
                @include BorderRadiusPartail($attr: "top-right");
                margin-bottom: -1px;
              } @else {
                @include BorderRadiusPartail($attr: "bottom-left");
                @include BorderRadiusPartail($attr: "bottom-right");
                margin-top: -1px;
              }


              &:not(:last-child) {
                @include Space("margin-right", "xxm");
              }

              &.__active {
                @if $key == "top" {
                  @include BorderColorPartail($attr: "bottom", $key: "white");
                } @else {
                  @include BorderColorPartail($attr: "top", $key: "white");
                }
                @include BackgroundColorWithKey("white");
              }
            }
          }
        }
      }
    }
  }
}


.yuumi-tabs-enter-active {
  transition: opacity 0.3s;
}

.yuumi-tabs-enter-from {
  opacity: 0;
}

.yuumi-tabs-leave-active {
  position: absolute;
}