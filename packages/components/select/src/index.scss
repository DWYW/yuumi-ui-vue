@import "../../../styles/mixin.scss";

.yuumi-select {
  display: inline-table;
  box-sizing: border-box;
  @include Border();
  @include BorderRadius();
  cursor: pointer;
  min-width: 90px;
  transition: border-color 0.3s;

  .select__content {
    display: table-cell;
    vertical-align: middle;
    @include Space("padding-left", "xm");
    position: relative;

    .select__placeholder {
      @include ColorWithKey("placeholder");
    }

    input {
      width: 100%;
      height: 100%;
      border: none;
      outline: none;
      padding: 0;
    }
  }

  .select__icon {
    display: table-cell;
    vertical-align: middle;
    text-align: center;
    @include Space("width", "md");
    @include ColorWithKey("border");
    transition: transform 0.3s;
    line-height: 0;

    &.icon-line-loading {
     animation: yuumiSelectOptionLoading 1s ease infinite;
     line-height: 0;
    }
  }

  &.__focus {
    @include BorderColorWithKey("primary");

    .select__icon.__arrow {
      transform: rotate(-180deg);
    }
  }

  &.__multiple .content-item {
    display: inline-block;
    margin: 2px 4px 2px 0;
    padding: 2px 4px;
    @include AlphaBackgroundColorWithKey("border", 0.4);
    @include BorderRadius();
    white-space: nowrap;

    .yuumi-icon {
      @include ColorWithKey("border");
      padding-left: 2px;

      &:hover {
        @include TextColor("secondary");
      }
    }
  }

  @each $key, $value in $--height {
    &.size__#{$key} {
      height: $value;
    }
  }

  @each $key in $--theme {
    &.theme__#{$key}  {
      @include BorderColorWithKey($key);
      @include ColorWithKey($key);

      .select__placeholder {
        @include AlphaColorWithKey($key, 0.5);
      }

      &.__multiple .content-item {
        @include AlphaBackgroundColorWithKey($key, 0.2);

        .yuumi-icon {
          @include AlphaColorWithKey($key, 0.5);

          &:hover {
            @include AlphaColorWithKey($key, 0.8);
          }
        }
      }
    }
  }

  &.__disabled {
    @include BorderColorWithKey("disabled");
    @include TextColor("secondary");
    cursor: no-drop;
    opacity: 0.5;
    user-select: none;

    &.__multiple .content-item {
      @include AlphaBackgroundColorWithKey("disabled", 0.3);
    }
  }
}

.options-wrap .scrollbar__body {
  max-height: 210px;
}

.yuumi-select-options {
  margin: 0;
  padding: 0;
  overflow-y: scroll;

  &::-webkit-scrollbar {
    width: 0;
    height: 0;
  }

  .option-item {
    list-style: none;
    @include Space("padding-top", "xm");
    @include Space("padding-right", "md");
    @include Space("padding-bottom", "xm");
    @include Space("padding-left", "sm");
    cursor: pointer;
    position: relative;
    white-space: nowrap;

    .yuumi-icon {
      display: none;
      position: absolute;
      top: 50%;
      @include Space("right", "md");
      transform: translate3d(100%, -50%,0);
    }

    &:hover {
      @include AlphaBackgroundColorWithKey("border", 0.5);
    }

    &.__selected {
      @include ColorWithKey("primary");

      .yuumi-icon {
        display: block;
      }
    }

    &.placeholder {
      @include ColorWithKey("placeholder");
      &:hover {
        background-color: transparent;
      }
    }
  }

  @each $key in $--theme {
    &.theme__#{$key} {
      .option-item.__selected {
        @include ColorWithKey($key);
      }
    }
  }
}

@keyframes yuumiSelectOptionLoading {
  100% {
    transform: rotate(1turn);
  }
}