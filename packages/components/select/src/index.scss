@import "../../../theme.scss";

.yuumi-select {
  display: inline-table;
  box-sizing: border-box;
  border: 1px solid map-get($--color, "border");
  border-radius: map-get($--border-radius, "primary");
  cursor: pointer;
  min-width: 90px;
  transition: border-color 0.3s;

  .select__content {
    display: table-cell;
    vertical-align: middle;
    padding-left: map-get($--space, "xm");
    position: relative;

    .select__placeholder {
      color: map-get($--color, "placeholder");
    }

    input {
      width: 100%;
      height: 100%;
      border: none;
      outline: none;
      padding: 0;
    }
  }

  .select__icon {
    display: table-cell;
    vertical-align: middle;
    text-align: center;
    width: map-get($--space, "md");
    color: map-get($--color, "border");
    transition: transform 0.3s;
    line-height: 0;
  }

  &.__focus {
    border-color: map-get($--color, "primary");

    .select__icon.__arrow {
      transform: rotate(-180deg);
    }
  }

  &.__multiple .content-item {
    display: inline-block;
    margin: 2px 4px 2px 0;
    padding: 2px 4px;
    background-color: rgba(map-get($--color, "border"), .4);
    border-radius: map-get($--border-radius, "primary");
    white-space: nowrap;

    .yuumi-icon {
      color: map-get($--color, "border");
      padding-left: 2px;

      &:hover {
        color: map-get($--text-color, "secondary")
      }
    }
  }

  @each $key, $value in $--height {
    &.size__#{$key} {
      height: $value;
    }
  }

  @each $key in $--theme {
    &.theme__#{$key}  {
      border-color: map-get($--color, $key);
      color: map-get($--color, $key);

      .select__placeholder {
        color: rgba(map-get($--color, $key), .5);
      }

      &.__multiple .content-item {
        background-color: rgba(map-get($--color, $key), .2);

        .yuumi-icon {
          color: rgba(map-get($--color, $key), .5);

          &:hover {
            color: rgba(map-get($--color, $key), .8);
          }
        }
      }
    }
  }

  &.__disabled {
    border-color: map-get($--color, "disabled");
    color: map-get($--text-color, "secondary");
    cursor: no-drop;
    opacity: 0.5;
    user-select: none;

    &.__multiple .content-item {
      background-color: rgba(map-get($--color, "disabled"), .3);
    }
  }
}

.options-wrap .scrollbar__body {
  max-height: 210px;
}

.yuumi-select-options {
  margin: 0;
  padding: 0;
  overflow-y: scroll;

  &::-webkit-scrollbar {
    width: 0;
    height: 0;
  }

  .option-item {
    list-style: none;
    padding: map-get($--space, "xm") map-get($--space, "sm");
    padding-right: map-get($--space, "md");
    cursor: pointer;
    position: relative;
    white-space: nowrap;

    .yuumi-icon {
      display: none;
      position: absolute;
      top: 50%;
      right: map-get($--space, "md");
      transform: translate3d(100%, -50%,0);
    }

    &:hover {
      background-color: rgba(map-get($--color, "border"), .5);
    }

    &.__selected {
      color: map-get($--color, 'primary');

      .yuumi-icon {
        display: block;
      }
    }

    &.placeholder {
      color: map-get($--color, "placeholder");
      &:hover {
        background-color: transparent;
      }
    }
  }

  @each $key in $--theme {
    &.theme__#{$key} {
      .option-item.__selected {
        color: map-get($--color, $key);
      }
    }
  }
}